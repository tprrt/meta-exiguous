#
# -*- coding: utf-8; tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil -*-

require conf/distro/poky.conf
require conf/distro/include/security_flags.inc

LOCALCONF_VERSION = "1"

DISTRO = "exiguous"
DISTRO_NAME = "Exiguous powered by OpenEmbedded/Yocto"
DISTROOVERRIDES = "poky:exiguous"

# -----------------------------------------------------------------------------
# Bitbake configuration
# -----------------------------------------------------------------------------

SDK_VENDOR = "-${DISTRO}ssdk"
SDK_NAME_PREFIX = "${DISTRO}"

MAINTAINER = "Thomas Perrot <thomas.perrot@tupi.fr>"

TARGET_VENDOR = "-${DISTRO}"

# -----------------------------------------------------------------------------
# Inherited distribution configuration
# -----------------------------------------------------------------------------

# NB: DEB is currently unstable
PACKAGE_CLASSES = "package_rpm"

# A list of classes to globally inherit.
# These classes are used by the OpenEmbedded build system to enable extra features.
# NB: image-swab is not currently maintained
USER_CLASSES_append = " image-mklibs image-prelink"

# -----------------------------------------------------------------------------
# Distribution configuration
# -----------------------------------------------------------------------------

# Toolchain configuration
# =============================================================================

# CFLAGS_append = " -O3"
# CXXFLAGS_append = " -O3"

# Main toolchain configuration
# TOOLCHAIN = "gcc"
# Use clang/llvm toolchain provide by meta-clang layer
# TOOLCHAIN = "clang"
# PREFERRED_PROVIDER_gcc-cross-initial-${TARGET_ARCH} = "${TOOLCHAIN}-cross-${TARGET_ARCH}"
# PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc-initial = "${TOOLCHAIN}-cross-${TARGET_ARCH}"
#
# Secondary toolchain configuration
# TOOLCHAIN_pn-<recipe-name> = "clang"
# DEPENDS_append_pn-<recipe-name> = "clang-cross-${TARGET_ARCH}"

# FIXME [exiguous] Re-enable ls-is-gold, there is a issue with setools
# DISTRO_FEATURES_append = " ld-is-gold"

# Libary configuration
# =============================================================================

# TCLIBC = "glibc"
# Use musl libc provide by meta-musl layer
# TCLIBC = "musl"
# PREFERRED_PROVIDER_virtual/libc = "${TCLIBC}"
# DISTRO_FEATURES_BACKFILL_CONSIDERED_append = " glibc"

# Bootloader configuration
# =============================================================================

PREFERRED_PROVIDER_virtual/bootloader = "u-boot"

# Kernel configuration
# =============================================================================

PREFERRED_PROVIDER_virtual/kernel = "linux-yocto"
PREFERRED_VERSION_linux-yocto = "4.1%"

PREFERRED_VERSION_linux-yocto_qemux86 = "4.1%"
PREFERRED_VERSION_linux-yocto_qemux86-64 = "4.1%"
PREFERRED_VERSION_linux-yocto_qemuarm = "4.1%"
PREFERRED_VERSION_linux-yocto_qemumips = "4.1%"
PREFERRED_VERSION_linux-yocto_qemumips64 = "4.1%"
PREFERRED_VERSION_linux-yocto_qemuppc = "4.1%"

PREFERRED_VERSION_linux-yocto_corei7-64-intel-common = "4.1%"

PREFERRED_PROVIDER_virtual/kernel_raspberrypi = "linux-raspberrypi"
PREFERRED_VERSION_linux-raspberrypi_raspberrypi = "3.18%"

PREFERRED_PROVIDER_virtual/kernel_beaglebone = "linux-ti-staging"
PREFERRED_VERSION_linux-ti-staging_beaglebone = "4.1%"

# To run extra pass during kernel compilation in order to build the initramfs
# NB. INITRAMFS_IMAGE_BUNDLE should be set in a configuration file and never in a recipe file.
INITRAMFS_IMAGE_BUNDLE = "1"

# System configuration
# =============================================================================

# VIRTUAL-RUNTIME_login_manager ?= "busybox"
# NB: It is also redefined in packagegroup-core-boot.bbappend
VIRTUAL-RUNTIME_login_manager = "busybox"
DISTRO_FEATURES_remove = "toybox"
DISTRO_FEATURES_BACKFILL_CONSIDERED_append = " toybox"

# VIRTUAL-RUNTIME_init_manager ?= "sysvinit"
# NB: It is also redefined in packagegroup-core-boot.bbappend
VIRTUAL-RUNTIME_init_manager = "systemd"
DISTRO_FEATURES_remove = "sysvinit"
DISTRO_FEATURES_append = " systemd"
DISTRO_FEATURES_BACKFILL_CONSIDERED_append = " sysvinit"

# NB: It is also redefined in packagegroup-core-boot.bbappend
VIRTUAL-RUNTIME_initscripts = ""

PREFERRED_PROVIDER_jpeg = "jpeg"
PREFERRED_PROVIDER_jpeg-native = "jpeg-native"

# FIXME [exiguous] Re-enable recipes adding users
# INHERIT += "extrausers"
# EXTRA_USERS_PARAMS = "\
#     usermod -p '$1$o1z3TKMG$v49npeAHkjaMoGkRIZVVJ1' root; \
# "

# Distro features configuration
# =============================================================================

# Specifies a list of distro-specific features to INSTALL to ALL images.
# NB: package-core-boot is redefined in this layer.
POKY_DEFAULT_EXTRA_RDEPENDS = ""
DISTRO_EXTRA_RDEPENDS_append = " \
    packagegroup-base \
    packagegroup-core-boot \
    packagegroup-exiguous-core \
    "

# Specifies a list of distro-specific packages to INSTALL to ALL images.
DISTRO_EXTRA_RRECOMMENDS_append = ""

# FIXME [exiguous] usbhost usbutils usbgadget
# The software support you want in your distribution for various features.
DISTRO_FEATURES_append = " ${DISTRO_EXTRA_RDEPENDS} ${DISTRO_EXTRA_RRECOMMENDS}"

DISTRO_FEATURES_remove = "wifi bluetooth nfc packagegroup-base-extended"

# Features from (DISTRO|MACHINE)_FEATURES_BACKFILL that should not be backfilled
# (i.e. added to (DISTRO|MACHINE)_FEATURES) during the build.
DISTRO_FEATURES_BACKFILL_CONSIDERED_append = " package-base-extended"
MACHINE_FEATURES_BACKFILL_CONSIDERED_append = " package-base-extended"

# Image features
# =============================================================================

# FIXME [exiguous] Re-enable lvm-on-luks
# Specifies the formats the OpenEmbedded build system uses during the build
# when creating the root filesystem.
# IMAGE_FSTYPES += "lvm-on-luks"
# IMAGES_CLASSES += "exiguous-image-luks"

# INITRD_IMAGE specifies the image recipe that should be built to provide the
# initial RAM disk image.
INITRD_IMAGE = "exiguous-image-initramfs"

# Specifies a list of distro-specific features to INSTALL to ALL core images.
# By default, all images of Exiguous that can use, contain features below:
# IMAGE_FEATURES_append = " hwcodecs read-only-rootfs ssh-server-dropbear nfs-server"

# FIXME [exiguous] Add openssh to BACKFILL CONSIDERED... ?
IMAGE_FEATURES_REPLACES_ssh-server-dropbear = "ssh-server-openssh"
# IMAGE_FEATURES_remove = "ssh-server-openssh"
# IMAGE_INSTALL_remove = "packagegroup-core-ssh-openssh"

# Linguas
# =============================================================================

# IMAGE_LINGUAS = "en-us"

# Variable that controls which locales for glibc are generated during the build
# (useful if the target device has 64Mbytes of RAM or less).
# ENABLE_BINARY_LOCALE_GENERATION = "1"

# LOCALE_UTF8_ONLY = "1"

# Specifies the list of GLIBC locales to generate should you not wish generate
# all LIBC locals, which can be time consuming.
# GLIBC_GENERATE_LOCALES = "en_US.UTF-8"

# -----------------------------------------------------------------------------
# QA
# -----------------------------------------------------------------------------

# Distro features check
# =============================================================================

INHERIT += "distro_features_check"

REQUIRED_DISTRO_FEATURES_append = " ${DISTRO_EXTRA_RDEPENDS}"

CONFLICT_DISTRO_FEATURES_append = " busybox sysvinit packagegroup-core-ssh-openssh"

# Build history
# =============================================================================

# To help you maintain the quality of your build output
INHERIT += "buildhistory"
BUILDHISTORY_COMMIT = "1"
BUILDHISTORY_DIR = "${TOPDIR}/buildhistory"

# Distro security check
# =============================================================================

# To run buck-security-native on rootfs built, result publish in the file
# ${T}/log.do_checksecurity.${PID}
# INHERIT += "check_security"

# Test
# =============================================================================

# Automatically runs the series of automated tests for images when an image is
# successfully built.
# INHERIT += "testimage"
# TEST_IMAGE = "1"
# TEST_LOG_DIR = "${WORKDIR}/testimage"
# TEST_SUITES = ""

# -----------------------------------------------------------------------------
# Misc configurations
# -----------------------------------------------------------------------------

QEMU_TARGETS = "x86_64"

# XSERVER = ""

SANITY_TESTED_DISTROS += "Exiguous-* \n"

# Delete the work directory used for building a package once the package is built.
INHERIT += "rm_work"
